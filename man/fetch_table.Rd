% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/func_api.R
\name{fetch_table}
\alias{fetch_table}
\title{Get data from a table}
\usage{
fetch_table(api, table_id, filters = NULL)
}
\arguments{
\item{api}{A 'gristapi::grist_api'-object}

\item{table_id}{Normalized table name (see \code{id} in \code{listtables} method). First character upper. OBLIGATORY}

\item{filters}{String. This is a JSON object mapping column names AND (&) sorting result AND (&) limit number of rows.
example : \verb{filter=\{"Country":["UNITED STATES"],"Card_Member":["CLARE DUDLEY","DARIUS BURGESS"]\}&sort=Card_Member,-Date&limit=10}
See the \href{https://support.getgrist.com/api/#tag/records/operation/listRecords}{grist API doc} for more examples
Note : add \verb{&hidden=true} to include the hidden columns
Default NULL}
}
\value{
A \code{\link[tibble:tibble]{tibble::tibble()}} object.
}
\description{
Fetch all data in the table by the given name, returning a tibble with field
names corresponding to the columns in that table.
}
\examples{
# view all data from a given table
table_name <- paste0("Mtcars_", get_os())
api <- grist_api$new(
  server = 'https://grist.numerique.gouv.fr',
  api_key = Sys.getenv("GRIST_KEY"),
  doc_id = Sys.getenv("GRIST_DOC_TEST")
)
fetch_table(api, table_name)

# view data from a given table with a limit
fetch_table(api, table_name, filters = "limit=10")

# view data from a given table with a filter
fetch_table(api, table_name, filters = 'filter={"cyl": [8]}')

}
\seealso{
Other function_gristapi: 
\code{\link{add_records}()},
\code{\link{countrows}()},
\code{\link{delete_records}()},
\code{\link{listcolumns}()},
\code{\link{listtables}()},
\code{\link{sync_table}()},
\code{\link{update_records}()}
}
\concept{function_gristapi}
