% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/func_api.R
\name{update_records}
\alias{update_records}
\title{Update rows in a table}
\usage{
update_records(api, table_id, record_dicts)
}
\arguments{
\item{api}{A 'gristapi::grist_api'-object}

\item{table_id}{Normalized table name (see \code{id} in \code{listtables} method). First character upper. OBLIGATORY}

\item{record_dicts}{A data frame holding the records with modified values. OBLIGATORY}
}
\value{
\code{TRUE} if the transaction was sucessfull.
}
\description{
Update existing records in the given table. The data is a data.frame.
}
\examples{
# update data in a given table
library(dplyr)
table_name <- paste0("Mtcars_", get_os())
api <- grist_api$new(
  server = 'https://grist.numerique.gouv.fr',
  api_key = Sys.getenv("GRIST_KEY"),
  doc_id = Sys.getenv("GRIST_DOC_TEST")
)
row_to_up <- fetch_table(api, table_name, filters = 'filter={"names": ["Merc 280"]}')
row_to_up <- row_to_up |> mutate(names = paste0(names,' - car for sale'))
update_records(api, table_name, row_to_up)
}
\seealso{
Other function_gristapi: 
\code{\link{add_records}()},
\code{\link{countrows}()},
\code{\link{delete_records}()},
\code{\link{fetch_table}()},
\code{\link{listcolumns}()},
\code{\link{listtables}()},
\code{\link{sync_table}()}
}
\concept{function_gristapi}
