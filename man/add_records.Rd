% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/func_api.R
\name{add_records}
\alias{add_records}
\title{Add rows in a table / Create table}
\usage{
add_records(api, table_id, record_dicts, create_or_replace = FALSE)
}
\arguments{
\item{api}{A 'gristapi::grist_api'-object}

\item{table_id}{Normalized table name (see \code{id} in \code{listtables} method). First character upper. OBLIGATORY}

\item{record_dicts}{A data frame holding the records with new values. OBLIGATORY}

\item{create_or_replace}{boolean. TRUE, the table is created if it does not exist or replaced with the structure of the new records. Default FALSE}
}
\value{
An integer vector of newly created ids.
}
\description{
Adds new records to the given table. The data is a data.frame.
}
\examples{
# Create a table with data
table_name <- paste0("Mtcars_",get_os())
api <- grist_api$new(
  server = 'https://grist.numerique.gouv.fr',
  api_key = Sys.getenv("GRIST_KEY"),
  doc_id = Sys.getenv("GRIST_DOC_TEST")
)
add_records( api,
  table_id = table_name,
  record_dicts = data.frame(names = row.names(mtcars), mtcars),
  create_or_replace = TRUE
)
# Add data in a table
library(dplyr)
new_row <- fetch_table(api, table_name, filters = 'filter={"names": ["Duster 360"]}')
new_row <- new_row |> mutate(names = paste0(names,' - custom'), mpg = 16.7)
new_row <- new_row |> select(-id)
add_records(api, table_name, new_row)

}
\seealso{
Other function_gristapi: 
\code{\link{countrows}()},
\code{\link{delete_records}()},
\code{\link{fetch_table}()},
\code{\link{listcolumns}()},
\code{\link{listtables}()},
\code{\link{sync_table}()},
\code{\link{update_records}()}
}
\concept{function_gristapi}
