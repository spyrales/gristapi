% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grist.R
\name{grist_api}
\alias{grist_api}
\title{Generate a New Api Object}
\value{
A new 'grist_api'-object

JSON string or list()

A \code{\link[tibble:tibble]{tibble::tibble()}} object.

A JSON string
}
\description{
The \code{grist_api} generator creates a new object, which is the class containing
simple methods to call an api Grist. The class is based on the \link[R6:R6Class]{R6}.
This work follows the Grist API references https://support.getgrist.com/api/
from July 2025, and is based on the Python module grist_api
https://github.com/gristlabs/py_grist_api/ and the Linux R package,
gristr https://forge.ird.fr/phim/cunnac/gristr
\subsection{Initialization}{

A new 'grist_api'-object is initialized using the \code{new()} method on the generator:

\code{
 api <- grist_api$new(
   server = 'https://grist.numerique.gouv.fr',
   api_key = Sys.getenv("GRIST_KEY"),
   doc_id = Sys.getenv("GRIST_DOC_TEST")
 )
}
}
}
\examples{
# Working only if Env Var "GRIST_KEY" and "GRIST_DOC_TEST" are defined

# Create a New Api Object on a single grist document
api <- grist_api$new(
  server = 'https://grist.numerique.gouv.fr',
  api_key = Sys.getenv("GRIST_KEY"),
  doc_id = Sys.getenv("GRIST_DOC_TEST")
)

}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-grist_api-new}{\code{grist_api$new()}}
\item \href{#method-grist_api-print}{\code{grist_api$print()}}
\item \href{#method-grist_api-call}{\code{grist_api$call()}}
\item \href{#method-grist_api-json_to_table}{\code{grist_api$json_to_table()}}
\item \href{#method-grist_api-table_to_json}{\code{grist_api$table_to_json()}}
\item \href{#method-grist_api-clone}{\code{grist_api$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-grist_api-new"></a>}}
\if{latex}{\out{\hypertarget{method-grist_api-new}{}}}
\subsection{Method \code{new()}}{
Create a new \code{grist_api} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{grist_api$new(server = NULL, api_key = NULL, doc_id = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{server}}{string. IP or URL with protocol (http or https)}

\item{\code{api_key}}{string. your Grist token}

\item{\code{doc_id}}{string. the internal doc ref in setting > API}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-grist_api-print"></a>}}
\if{latex}{\out{\hypertarget{method-grist_api-print}{}}}
\subsection{Method \code{print()}}{
print the doc metadata of \code{grist_api} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{grist_api$print(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Passed...}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-grist_api-call"></a>}}
\if{latex}{\out{\hypertarget{method-grist_api-call}{}}}
\subsection{Method \code{call()}}{
Low-level interface that returns the REST call result as json
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{grist_api$call(
  url,
  json_data = NULL,
  method = NULL,
  prefix = NULL,
  type_resp = "list"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{url}}{The part of the URL after api/doc/\code{doc_id} or other prefix. OBLIGATORY}

\item{\code{json_data}}{A JSON string with records to patch, put, delete or post. Default NULL}

\item{\code{method}}{Http method to use ('GET', 'POST', 'DELETE', 'PUT', 'PATCH'). Default 'GET' or 'POST' with data}

\item{\code{prefix}}{To use a call other than  api/doc/\code{doc_id}. Default NULL}

\item{\code{type_resp}}{Set the output type string or list. Default "list"}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-grist_api-json_to_table"></a>}}
\if{latex}{\out{\hypertarget{method-grist_api-json_to_table}{}}}
\subsection{Method \code{json_to_table()}}{
Convert a Grist json response string to a table
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{grist_api$json_to_table(json_data, structure)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{json_data}}{A JSON string. OBLIGATORY}

\item{\code{structure}}{The name of the Grist response encapsulating structure. Usually "tables", "records". OBLIGATORY}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-grist_api-table_to_json"></a>}}
\if{latex}{\out{\hypertarget{method-grist_api-table_to_json}{}}}
\subsection{Method \code{table_to_json()}}{
Convert a data.frame of records to a json string
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{grist_api$table_to_json(records, mode = "modify", key_cols = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{records}}{A data.frame()}

\item{\code{mode}}{"add", "modify" or "sync".}

\item{\code{key_cols}}{A vector of columns (grist_col_id) constituting a unique key. only for "sync" mode}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-grist_api-clone"></a>}}
\if{latex}{\out{\hypertarget{method-grist_api-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{grist_api$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
